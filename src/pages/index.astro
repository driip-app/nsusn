---
import { Image } from "astro:assets";
import Layout from "../layouts/Layout.astro";

const logos = [
  { src: "/images/brands/1.png", alt: "Brand 1", width: 80, height: 80 },
  { src: "/images/brands/2.png", alt: "Brand 2", width: 80, height: 80 },
  { src: "/images/brands/3.png", alt: "Brand 3", width: 80, height: 80 },
  { src: "/images/brands/4.png", alt: "Brand 4", width: 80, height: 80 },
];
---

<Layout title="Welcome to NSUSN">
  <div
    class="relative h-screen flex flex-col items-center justify-between bg-image overflow-clip"
  >
    <main class="flex flex-col items-center text-center p-4">
      <Image
        width="300"
        height="200"
        alt="NSUSN Logo."
        src="/images/logo.svg"
        class={"mt-[50px] mb-[150px] hidden md:block logo"}
      />

      <Image
        width="128"
        height="128"
        alt="NSUSN Logo."
        src="/images/chevron.svg"
        class={"mb-[50px] md:hidden"}
      />

      <!-- <h2
        class="letters font-oswald text-white font-medium text-center uppercase leading-none tracking-[4px] text-[20px] xl:text-[40px]"
      >
        IF you’re THE disruptive
      </h2> -->

      <h2 class="subtext-container">
        <span class="text-wrapper">
          <span class="line line1"></span>
          <span
            id="textWrapper"
            class="letters font-oswald text-white font-medium text-center uppercase leading-none tracking-[4px] text-[20px] xl:text-[40px]"
          >
            IF you’re THE disruptive
          </span>
        </span>
      </h2>

      <!-- <div class="my-4 md:my-8 gradient-text w-full whitespace-nowrap letters">
        {
          "ENTREPRENEUR"
            .split("")
            .map((letter) => (
              <span class="uppercase font-big-shoulders text-[54px] sm:text-[64px] md:text-[100px] md2:text-[120px] md3:text-[140px] lg:text-[160px] xl:text-[180px] 3xl:text-[220px] leading-none letter">
                {letter}
              </span>
            ))
        }
      </div> -->

      <div
        id="heading"
        class="my-4 md:my-8 w-full whitespace-nowrap uppercase font-big-shoulders text-[54px] sm:text-[64px] md:text-[100px] md2:text-[120px] md3:text-[140px] lg:text-[160px] xl:text-[180px] 3xl:text-[220px] leading-none tracking-[30px]"
      >
        ENTREPRENEUR
      </div>

      <h2
        class="font-oswald text-white text-[14px] xl:text-[24px] font-extralight leading-none mb-8 tracking-[4px] md:tracking-[8px]"
      >
        JOIN <span class="font-semibold">NEXT LAUNCHPAD 3.0</span> NOW
      </h2>

      <button
        onclick="window.location.href='https\:///tally.so/r/3y6yWx'"
        class="mt-16 md:mt-0 transition-colors duration-200 ease-in-out w-[200px] h-[44px] rounded-[10px] bg-transparent md:bg-primary-yellow hover:bg-primary-yellow text-white hover:text-primary-black md:text-primary-black font-roboto font-bold text-sm tracking-wider border-2 border-primary-yellow md:border-none uppercase"
        >Submit Pitch</button
      >
    </main>

    <footer
      class="sticky w-full inset-x-0 bottom-0 flex justify-center items-center bg-primary-yellow gap-x-4 rounded-t-[20px]"
    >
      {
        logos.map((logo) => (
          <Image
            alt={logo.alt}
            src={logo.src}
            width={logo.width}
            height={logo.height}
            class={"object-cover object-center"}
          />
        ))
      }
    </footer>
  </div>
</Layout>

<style>
  .bg-image {
    background-image: url("/images/design.svg");
    background-position: center top 10rem;
    background-repeat: no-repeat;
    background-size: 400px;
  }

  @media screen and (max-width: 768px) {
    .bg-image {
      background-image: none;
    }

    .bg-image:before {
      content: "";
      overflow: clip;
      position: absolute;

      width: 200px;
      height: 100%;

      left: 12%;
      bottom: -40%;
      z-index: -1;

      background-image: url("/images/design.svg");
      background-repeat: no-repeat;
      background-position: 0 0;
      background-size: contain;

      transform: rotate(-45deg);
    }
  }

  .gradient-text {
    background: linear-gradient(90deg, #b94e96 30%, #fabc43 100%);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
  }

  .logo {
    opacity: 0;
  }

  .subtext-container .text-wrapper {
    position: relative;
    padding-top: 0.1em;
    display: inline-block;
    padding-right: 0.05em;
    padding-bottom: 0.15em;
  }

  .subtext-container .line {
    left: 0;
    width: 3px;
    height: 100%;
    position: absolute;
    background-color: #fff;
    transform-origin: 0 50%;
  }

  .subtext-container .line1 {
    top: 0;
    left: 0;
  }

  .subtext-container .letter {
    opacity: 0;
    line-height: 1em;
    display: inline-block;
  }
</style>

<script>
  import gsap from "gsap";
  import SplitType from "split-type";
  import { TextPlugin } from "gsap/TextPlugin";

  gsap.registerPlugin(TextPlugin);

  const logo = document.querySelector(".logo");

  gsap.to(logo, {
    opacity: 1,
    delay: 0.6,
    duration: 1,
    ease: "power1.in",
  });

  const TEXTVARIATIONS = [
    { text: "IF you’re THE disruptive", heading: "ENTREPRENEUR" },
    { text: "if you’re looking for expert", heading: "GUIDANCE" },
    { text: "if you’re looking for extensive", heading: "FUNDING" },
  ];

  let variationIndex = 1;

  const heading = document.querySelector("#heading");
  const textWrapper = document.querySelector("#textWrapper");
  const textWrapperWidth = textWrapper?.getBoundingClientRect().width;

  console.log(textWrapper?.getBoundingClientRect().width);

  let splitHeading = SplitType.create(heading as HTMLElement);
  let splitTextWrapper = SplitType.create(textWrapper as HTMLElement);

  splitHeading?.words?.forEach((word) => {
    word.style.background = "linear-gradient(90deg, #b94e96 30%, #fabc43 100%)";
    word.style["-webkit-background-clip" as any] = "text";
    word.style["-webkit-text-fill-color" as any] = "#b94e96";
  });

  const tl = gsap.timeline({ repeat: -1 });

  tl.add(
    gsap.from(".line1", {
      scaleY: 0,
      duration: 0.7,
      stagger: 0.034,
      ease: "power4.out",
    })
  )
    .add(
      gsap.to(".line1", {
        x: textWrapperWidth,
        delay: 0.1,
        duration: 0.7,
        stagger: 0.034,
        ease: "power4.out",
      })
    )
    .add(
      gsap.from(splitTextWrapper.chars, {
        opacity: 0,
        duration: 0.6,
        delay: -0.775,
        stagger: 0.034,
        ease: "power4.out",
      })
    )
    .add(
      gsap.from(splitHeading.chars, {
        delay: 0.2,
        rotateY: -90,
        duration: 0.8,
        stagger: 0.05,
        repeatDelay: 0.2,
        ease: "expo.out",
      })
    )
    .add(
      gsap.to(".subtext-container", {
        delay: 1,
        opacity: 0,
        duration: 1,
        ease: "power4.out",
      })
    )
    .add(
      gsap.to(splitHeading.chars, {
        opacity: 0,
        delay: 0.2,
        stagger: 0.05,
      })
    );

  tl.play();
</script>
